# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DvrN7avHOHuW15F1YCsMXPQhXdGS9oKY

Preguntas:

P: ¿Cuánto se ganó en 2019?
P: ¿Cuál fue el mejor mes para las ventas? ¿Cuánto se ganó ese mes?
P: ¿Qué ciudad tuvo el mayor número de ventas?
P: ¿A qué hora debemos mostrar publicidad para maximizar probabilidad de que el cliente compre el producto?
P: ¿Qué producto vendió más? ¿Por qué crees que vendió más?


Columnas

Order ID: Cada pedido recibe su propio ID de pedido que no se duplicará. Este número puede ser útil para el vendedor cuando intenta averiguar ciertos detalles sobre un pedido, como la fecha o el estado del envío.
Product: Producto vendido.
Quantity ordered: la cantidad solicitada es la cantidad total de artículos solicitados en el pedido inicial (sin ningún cambio)
Price Each: Precio de cada producto. Order Date: Esta es la fecha en que el cliente solicita que se envíe el pedido. Purchase Address: Dirección de compra
"""

import pandas as pd
import numpy as np

# Importar los conjuntos de datos sin procesar

jan_data = pd.read_csv('Sales_January_2019.csv')
feb_data = pd.read_csv("Sales_February_2019.csv")
march_data = pd.read_csv("Sales_March_2019.csv")
april_data = pd.read_csv("Sales_April_2019.csv")
may_data = pd.read_csv("Sales_May_2019.csv")
june_data = pd.read_csv("Sales_June_2019.csv")
july_data = pd.read_csv("Sales_July_2019.csv")
aug_data = pd.read_csv("Sales_August_2019.csv")
sep_data = pd.read_csv("Sales_September_2019.csv")
oct_data = pd.read_csv("Sales_October_2019.csv")
nov_data = pd.read_csv("Sales_November_2019.csv")
dec_data = pd.read_csv("Sales_December_2019.csv")

"""## Tratamiento de datos"""

# Unir todos los datasets

lista_datas = [jan_data, feb_data, march_data, april_data ,may_data,june_data, july_data, aug_data, sep_data, oct_data, nov_data, dec_data]

# Visualizamos las primeras 5 filas

df  = pd.concat(lista_datas, axis = 0)
df

# Visualizamos el tamaño del dataset

df.shape

df.isnull().sum()

df = df.dropna(how='all', inplace=False)
df

df.isnull().sum()

# Visualizar el tipo de datos de la columnas

df.dtypes

# Convertir el tipo de datos de las columnas

df['Price Each'].unique()

df = df.drop(df[df['Price Each']=='Price Each'].index)

df['Price Each'].unique()

# La columna Quantity Ordered posee en algunas filas incorrecta la cantidad, se eliminan esas filas donde la cantidad es "Quantity Ordered"

df['Quantity Ordered'].unique()

df = df.drop(df[df['Quantity Ordered']=='Quantity Ordered'].index)

df['Quantity Ordered'].unique()

df['Quantity Ordered'] = pd.to_numeric(df['Quantity Ordered']).astype(int)
df['Price Each'] = pd.to_numeric(df['Price Each']).astype(float)
df['Order Date'] = pd.to_datetime(df['Order Date'])

df.dtypes

# Obtener la ubicación y el estado

df["Consumer_Primary_Location"] = df['Purchase Address'].apply(lambda x: x.split(',')[0])
df.head(2)

df["Consumer_State"] =  df['Purchase Address'].apply(lambda x: x.split(',')[1])
df.head(2)

df['Month'] = df['Order Date'].dt.month
df.head(2)

# Obtenemos la hora de los pedidos

df['time'] = df['Order Date'].dt.hour
df['time'].head(5)

"""## Preguntas"""

# ¿Cuánto se ganó en 2019?
ganancias = round((df['Quantity Ordered'] * df['Price Each']).sum(),2)
print(f'Las ganancias en el año 2019 fueron de; ', {ganancias})

# P: ¿Cuál fue el mejor mes para las ventas? ¿Cuánto se ganó ese mes?

df['Revenue'] = df['Quantity Ordered'] * df['Price Each']
df['Revenue']

ganancias_mes = df[['Revenue', 'Month']].groupby('Month').sum().reset_index()
ganancias_mes = ganancias_mes.sort_values('Revenue', ascending = False)
ganancias_mes

print(df_ganancias)
print("El mejor mes para las ventas es el número:", df_ganancias.index[0], " con una cuantía de:", df_ganancias['Revenue'].iloc[0])

"""
---

"""

#P: ¿Qué ciudad tuvo el mayor número de ventas?

ciudad_ordenes = df[['Consumer_State', 'Quantity Ordered']].groupby('Consumer_State').sum().reset_index()
ciudad_ordenes

ciudad_ordenes = ciudad_ordenes.sort_values('Quantity Ordered', ascending = False)
print("La ciudad con el mayor numero de ventas es :", ciudad_ordenes['Consumer_State'].iloc[0], " con una cuantía de:", ciudad_ordenes['Quantity Ordered'].iloc[0])
ciudad_ordenes

# P: ¿A qué hora debemos mostrar publicidad para maximizar probabilidad de que el cliente compre el producto?

tiempo_euros = df[[ 'Revenue', 'time']].groupby('time').sum().reset_index()
tiempo_euros

tiempo_euros = tiempo_euros.sort_values('Revenue', ascending = False)
print("La hora para tener más ventas son las ", tiempo_euros['time'].iloc[0], " con una cuantia de", tiempo_euros['Revenue'].iloc[0], "€")
tiempo_euros

# P: ¿Qué producto vendió más? ¿Por qué crees que vendió más?

producto_mas_vendido = df[[ 'Quantity Ordered', 'Product']].groupby('Product').sum().reset_index()
producto_mas_vendido

producto_mas_vendido = producto_mas_vendido.sort_values('Quantity Ordered', ascending = False)
producto_mas_vendido

print("El producto mas vendido es ", producto_mas_vendido['Product'].iloc[0], " con una cantidad de", producto_mas_vendido['Quantity Ordered'].iloc[0], "ordenes")